{
    "chunks": [
        {
            "start": 0.0,
            "end": 4.0,
            "text": " Now we will discuss a special thing in java which is called comments"
        },
        {
            "start": 4.0,
            "end": 9.0,
            "text": " Comments are not the comments that we pass on each other in college"
        },
        {
            "start": 9.0,
            "end": 12.0,
            "text": " These are helpful comments"
        },
        {
            "start": 12.0,
            "end": 17.0,
            "text": " That is, there is a portion in the code that you do not want to write in java"
        },
        {
            "start": 17.0,
            "end": 20.0,
            "text": " You want to write in English, you want to write in Hindi"
        },
        {
            "start": 20.0,
            "end": 23.0,
            "text": " And want to tell whoever is reading your code"
        },
        {
            "start": 23.0,
            "end": 26.0,
            "text": " What is the meaning of which part of the code"
        },
        {
            "start": 26.0,
            "end": 31.0,
            "text": " Comments are that part of our code that is never executed"
        },
        {
            "start": 31.0,
            "end": 36.0,
            "text": " Like if I have to tell someone who is reading what my code does"
        },
        {
            "start": 36.0,
            "end": 40.0,
            "text": " So what can I do, I will write a comment above"
        },
        {
            "start": 40.0,
            "end": 46.0,
            "text": " Code to calculate sum"
        },
        {
            "start": 46.0,
            "end": 51.0,
            "text": " So whoever reads my code will know what is the code below"
        },
        {
            "start": 51.0,
            "end": 54.0,
            "text": " Below is the code to calculate the sum"
        },
        {
            "start": 54.0,
            "end": 57.0,
            "text": " And you will notice that this line is written in English"
        },
        {
            "start": 57.0,
            "end": 62.0,
            "text": " If I do not put any semicolon here, then I will not have any difference"
        },
        {
            "start": 62.0,
            "end": 65.0,
            "text": " I mean, I did not get any error by putting semicolon"
        },
        {
            "start": 65.0,
            "end": 69.0,
            "text": " But if I remove the semicolon here, then I will get an error"
        },
        {
            "start": 69.0,
            "end": 71.0,
            "text": " I will try to run this code"
        },
        {
            "start": 71.0,
            "end": 75.0,
            "text": " So my code will not run, there will be an error here, semicolon expected"
        },
        {
            "start": 75.0,
            "end": 80.0,
            "text": " But if I put a semicolon here and then I run the code"
        },
        {
            "start": 80.0,
            "end": 82.0,
            "text": " Then there will be no error"
        },
        {
            "start": 82.0,
            "end": 86.0,
            "text": " So such a part of the code that tells only about the code"
        },
        {
            "start": 86.0,
            "end": 91.0,
            "text": " But does not execute, there are no errors in it, mistakes are not found in it"
        },
        {
            "start": 91.0,
            "end": 94.0,
            "text": " This is the part of the code that compiler ignores"
        },
        {
            "start": 94.0,
            "end": 97.0,
            "text": " That it is not for me, it is for humans to read"
        },
        {
            "start": 97.0,
            "end": 99.0,
            "text": " We call it comments"
        },
        {
            "start": 99.0,
            "end": 103.0,
            "text": " Now we define comments in java in two ways"
        },
        {
            "start": 103.0,
            "end": 107.0,
            "text": " The first method is by putting two forward slashes"
        },
        {
            "start": 107.0,
            "end": 111.0,
            "text": " Then whatever we write becomes a comment"
        },
        {
            "start": 111.0,
            "end": 114.0,
            "text": " Like I wrote code to calculate sum"
        },
        {
            "start": 114.0,
            "end": 116.0,
            "text": " And I have put two forward slashes in front of it"
        },
        {
            "start": 116.0,
            "end": 119.0,
            "text": " So this whole line has become a comment"
        },
        {
            "start": 119.0,
            "end": 124.0,
            "text": " The second way to write comments is forward slash, then asterisk"
        },
        {
            "start": 124.0,
            "end": 127.0,
            "text": " Then you can write multi-line comments in between"
        },
        {
            "start": 127.0,
            "end": 129.0,
            "text": " And then forward slash again"
        },
        {
            "start": 129.0,
            "end": 130.0,
            "text": " What does this mean?"
        },
        {
            "start": 130.0,
            "end": 136.0,
            "text": " With the help of this first method, we can write single line comments"
        },
        {
            "start": 137.0,
            "end": 142.0,
            "text": " If I write something in the next line, then it will not be a comment"
        },
        {
            "start": 142.0,
            "end": 144.0,
            "text": " It will become a part of the code"
        },
        {
            "start": 144.0,
            "end": 148.0,
            "text": " To make it a comment, I have to put this slash again"
        },
        {
            "start": 148.0,
            "end": 152.0,
            "text": " But if I have to write comments in many lines"
        },
        {
            "start": 152.0,
            "end": 156.0,
            "text": " Suppose I want to write hello world again"
        },
        {
            "start": 156.0,
            "end": 160.0,
            "text": " So instead of writing it three times separately, I can write it in this format"
        },
        {
            "start": 160.0,
            "end": 165.0,
            "text": " This forward slash asterisk and again asterisk and slash"
        },
        {
            "start": 165.0,
            "end": 168.0,
            "text": " And whatever part I had to write in between"
        },
        {
            "start": 168.0,
            "end": 174.0,
            "text": " Code to calculate sum, hello world"
        },
        {
            "start": 174.0,
            "end": 177.0,
            "text": " Now whatever things will be written in between"
        },
        {
            "start": 177.0,
            "end": 180.0,
            "text": " All of them will automatically become a comment"
        },
        {
            "start": 180.0,
            "end": 182.0,
            "text": " So we can have two types of comments"
        },
        {
            "start": 182.0,
            "end": 186.0,
            "text": " One is where we put only two slashes"
        },
        {
            "start": 186.0,
            "end": 189.0,
            "text": " And the other is where we use asterisk"
        },
        {
            "start": 189.0,
            "end": 191.0,
            "text": " These are called multi-line comments"
        },
        {
            "start": 191.0,
            "end": 194.0,
            "text": " So whenever we go to give an interview in code"
        },
        {
            "start": 194.0,
            "end": 200.0,
            "text": " So if we want to tell the interviewer the meaning of the different parts of the code"
        },
        {
            "start": 200.0,
            "end": 204.0,
            "text": " So we use comments in interviews"
        },
        {
            "start": 204.0,
            "end": 207.0,
            "text": " Plus whenever we make our projects on which different teammates are working"
        },
        {
            "start": 207.0,
            "end": 210.0,
            "text": " Or we go to the company and work on a project"
        },
        {
            "start": 210.0,
            "end": 213.0,
            "text": " So there other people come and read our code many times"
        },
        {
            "start": 213.0,
            "end": 215.0,
            "text": " So that they can understand the code easily"
        },
        {
            "start": 215.0,
            "end": 217.0,
            "text": " For that also we use many comments"
        }
    ],
    "full_text": " Now we will discuss a special thing in java which is called comments Comments are not the comments that we pass on each other in college These are helpful comments That is, there is a portion in the code that you do not want to write in java You want to write in English, you want to write in Hindi And want to tell whoever is reading your code What is the meaning of which part of the code Comments are that part of our code that is never executed Like if I have to tell someone who is reading what my code does So what can I do, I will write a comment above Code to calculate sum So whoever reads my code will know what is the code below Below is the code to calculate the sum And you will notice that this line is written in English If I do not put any semicolon here, then I will not have any difference I mean, I did not get any error by putting semicolon But if I remove the semicolon here, then I will get an error I will try to run this code So my code will not run, there will be an error here, semicolon expected But if I put a semicolon here and then I run the code Then there will be no error So such a part of the code that tells only about the code But does not execute, there are no errors in it, mistakes are not found in it This is the part of the code that compiler ignores That it is not for me, it is for humans to read We call it comments Now we define comments in java in two ways The first method is by putting two forward slashes Then whatever we write becomes a comment Like I wrote code to calculate sum And I have put two forward slashes in front of it So this whole line has become a comment The second way to write comments is forward slash, then asterisk Then you can write multi-line comments in between And then forward slash again What does this mean? With the help of this first method, we can write single line comments If I write something in the next line, then it will not be a comment It will become a part of the code To make it a comment, I have to put this slash again But if I have to write comments in many lines Suppose I want to write hello world again So instead of writing it three times separately, I can write it in this format This forward slash asterisk and again asterisk and slash And whatever part I had to write in between Code to calculate sum, hello world Now whatever things will be written in between All of them will automatically become a comment So we can have two types of comments One is where we put only two slashes And the other is where we use asterisk These are called multi-line comments So whenever we go to give an interview in code So if we want to tell the interviewer the meaning of the different parts of the code So we use comments in interviews Plus whenever we make our projects on which different teammates are working Or we go to the company and work on a project So there other people come and read our code many times So that they can understand the code easily For that also we use many comments"
}